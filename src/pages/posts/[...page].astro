---
import Card from "#components/card.astro";
import Pagenav from "#components/pagenav.astro";
import { PAGES, SITE } from "#consts";
import Layout from "#layouts/layout.astro";
import type { GetStaticPaths, Page } from "astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

/** props for the posts page generator */
type Props = {
  /**
   * current page object
   */
  page: Page<CollectionEntry<"posts">>;
};
const { page } = Astro.props;

/**
 * generates static paths for each posts page
 * @param paginate function that splits an array of posts into multiple pages
 * @returns array of static paths for each posts page
 */
export const getStaticPaths = (async ({ paginate }) => {
  /** all posts */
  const posts = await getCollection("posts");
  // sort posts by publication date, newest first
  posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

  return paginate(posts, { pageSize: 18 });
}) satisfies GetStaticPaths;

/**
 * get a text excerpt from a post
 * @param post post entry
 * @param numWords number of words to include in excerpt
 * @returns excerpt string
 */
function getExcerpt(post: CollectionEntry<"posts">, numWords: number): string {
  // if post has no body, return empty string
  if (!post.body) return "";
  /** post body split into words */
  const words = post.body.trim().split(/\s+/);
  /** excerpt string with the first n words of the post body */
  const excerpt = words.slice(0, numWords).join(" ");

  // convert some basic md syntax to html
  return excerpt
    .replace(/\*\*(.*?)\*\*/g, "<strong>$1</strong>") // **bold**
    .replace(/\*(.*?)\*/g, "<em>$1</em>") // *italic*
    .replace(/_(.*?)_/g, "<em>$1</em>"); // _italic_
}

/** page description */
const description = page
  ? `${PAGES.posts.description} Página ${page.currentPage} de ${page.lastPage}.`
  : PAGES.posts.description;
---

<Layout
  title={PAGES.posts.name}
  description={description}
  breadcrumbs
>
  <h1>Publicaciones</h1>
  <p>
    Explore las publicaciones de {SITE.author}
    – página {page.currentPage} de {page.lastPage}.
  </p>

  <!-- page navigation, top -->
  <Pagenav page={page} />

  <!-- posts grid -->
  <ul class="my-6 grid gap-6 md:grid-cols-2 lg:grid-cols-3">
    {
      page.data.map((post) => (
        <li>
          <Card
            href={`${PAGES.posts.href}/${post.id}`}
            title={post.data.title}
            image={post.data.headerImg}
            date={post.data.pubDate}
          >
            <div set:html={getExcerpt(post, 20) + "..."} />
          </Card>
        </li>
      ))
    }
  </ul>

  <!-- page navigation, bottom -->
  <Pagenav page={page} />
</Layout>
